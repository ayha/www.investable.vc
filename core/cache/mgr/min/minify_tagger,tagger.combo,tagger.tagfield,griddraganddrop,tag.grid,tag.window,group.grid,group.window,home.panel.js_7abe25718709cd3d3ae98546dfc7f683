var Tagger=function(config){config=config||{};Tagger.superclass.constructor.call(this,config);};Ext.extend(Tagger,Ext.Component,{page:{},window:{},grid:{},tree:{},panel:{},combo:{},config:{},fields:{}});Ext.reg('tagger',Tagger);Tagger=new Tagger();;Tagger.combo.Group=function(config){config=config||{};Ext.applyIf(config,{name:'group',hiddenName:'group',displayField:'name',valueField:'id',fields:['name','id'],pageSize:20,url:Tagger.config.connectorUrl,baseParams:{action:'mgr/group/getlist'}});Tagger.combo.Group.superclass.constructor.call(this,config);};Ext.extend(Tagger.combo.Group,MODx.combo.ComboBox);Ext.reg('tagger-combo-group',Tagger.combo.Group);Tagger.combo.Tag=function(config){config=config||{};Ext.applyIf(config,{name:'tag',hiddenName:'tag',displayField:'tag',valueField:'id',fields:['tag','id'],pageSize:20,editable:config.allowAdd,forceSelection:!config.allowAdd,url:Tagger.config.connectorUrl,baseParams:{action:'mgr/tag/getlist'}});Tagger.combo.Tag.superclass.constructor.call(this,config);};Ext.extend(Tagger.combo.Tag,MODx.combo.ComboBox);Ext.reg('tagger-combo-tag',Tagger.combo.Tag);Tagger.combo.FieldType=function(config){config=config||{};Ext.applyIf(config,{store:new Ext.data.SimpleStore({fields:['d','v'],data:[[_('tagger.field.tagfield'),'tagger-field-tags'],[_('tagger.field.combobox'),'tagger-combo-tag']]}),displayField:'d',valueField:'v',mode:'local',value:'tagger-field-tags',triggerAction:'all',editable:false,selectOnFocus:false,preventRender:true,forceSelection:true,enableKeyEvents:true});Tagger.combo.FieldType.superclass.constructor.call(this,config);};Ext.extend(Tagger.combo.FieldType,MODx.combo.ComboBox);Ext.reg('tagger-combo-field-type',Tagger.combo.FieldType);Tagger.combo.Templates=function(config,getStore){config=config||{};Ext.applyIf(config,{name:'templates',hiddenName:'templates',displayField:'templatename',valueField:'id',fields:['templatename','id'],mode:'remote',triggerAction:'all',typeAhead:true,editable:true,forceSelection:true,pageSize:20,url:MODx.config.connectors_url+'element/template.php',baseParams:{action:'getlist'}});Ext.applyIf(config,{store:new Ext.data.JsonStore({url:config.url,root:'results',totalProperty:'total',fields:config.fields,errorReader:MODx.util.JSONReader,baseParams:config.baseParams||{},remoteSort:config.remoteSort||false,autoDestroy:true})});if(getStore===true){config.store.load();return config.store;}
Tagger.combo.Templates.superclass.constructor.call(this,config);this.config=config;return this;};Ext.extend(Tagger.combo.Templates,Ext.ux.form.SuperBoxSelect);Ext.reg('tagger-combo-templates',Tagger.combo.Templates);Tagger.combo.TV=function(config){config=config||{};Ext.applyIf(config,{name:'tv',hiddenName:'tv',displayField:'name',valueField:'id',fields:['name','id'],pageSize:20,url:Tagger.config.connectorUrl,baseParams:{action:'mgr/extra/gettvs'}});Tagger.combo.TV.superclass.constructor.call(this,config);};Ext.extend(Tagger.combo.TV,MODx.combo.ComboBox);Ext.reg('tagger-combo-tv',Tagger.combo.TV);Tagger.combo.GroupPlace=function(config){config=config||{};Ext.applyIf(config,{store:new Ext.data.SimpleStore({fields:['d','v'],data:[[_('tagger.group.place_in_tab'),'in-tab'],[_('tagger.group.place_tvs_tab'),'in-tvs'],[_('tagger.group.place_above_content'),'above-content'],[_('tagger.group.place_below_content'),'below-content'],[_('tagger.group.place_bottom_page'),'bottom-page']]}),displayField:'d',valueField:'v',mode:'local',value:'in-tab',triggerAction:'all',editable:false,selectOnFocus:false,preventRender:true,forceSelection:true,enableKeyEvents:true});Tagger.combo.GroupPlace.superclass.constructor.call(this,config);};Ext.extend(Tagger.combo.GroupPlace,MODx.combo.ComboBox);Ext.reg('tagger-combo-group-place',Tagger.combo.GroupPlace);;Tagger.fields.Tags=function(config){config=config||{};Ext.applyIf(config,{ignoreCase:false,valueField:'tag',displayField:'tag',minChars:1,allowAdd:true,editable:true,hideTrigger:false,autoTag:false,hideInput:false,tagLimit:0});Tagger.fields.Tags.superclass.constructor.call(this,config);this.myStore=new Ext.data.ArrayStore({autoDestroy:true,idIndex:0,fields:['tag'],data:[]});if(this.config.autoTag==true){this.autoTagStore=new Ext.data.ArrayStore({autoDestroy:true,idIndex:0,fields:['tag','active','el'],data:[]});}
this.store.loaded=false;this.store.on('load',function(){this.store.loaded=true;},this);this.config=config;this.addEvents('additem','removeitem');};Ext.extend(Tagger.fields.Tags,MODx.combo.ComboBox,{mode:'remote',defaultAutoCreate:{tag:"input",type:"text",size:"24",autocomplete:"on"},myStore:null,autoTagStore:null,store:null,initValue:function(){if(this.value!==undefined){this.setValue(this.value);}else if(!Ext.isEmpty(this.el.dom.value)&&this.el.dom.value!=this.emptyText){this.setValue(this.el.dom.value);}
this.originalValue=this.getFieldValue();if(this.config.autoTag){this.store.baseParams[this.store.paramNames.start]=0;this.store.baseParams[this.store.paramNames.limit]=0;this.store.load();this.store.on('load',this.loadAutoTags,this,{single:true});}},loadAutoTags:function(){Ext.each(this.store.data.items,function(item){new Tagger.fields.Tag({owner:this,renderTo:this.insertedTagsEl,value:item.data.tag,active:false,listeners:{remove:function(item){this.fireEvent('removeitem',this,item);},scope:this}});},this);},onFocus:function(){this.preFocus();if(this.focusClass){this.el.addClass(this.focusClass);}
if(!this.hasFocus){this.hasFocus=true;this.startValue=this.getFieldValue();this.fireEvent('focus',this);}},isDirty:function(){if(this.disabled||!this.rendered){return false;}
return String(this.getFieldValue())!==String(this.originalValue);},append:function(v){this.setValue([this.getFieldValue(),v].join(''));},getValue:function(){var restValues=this.getFieldValue();if(restValues==''||restValues==undefined)restValues='';restValues=restValues.split(/\s*[,]\s*/);Ext.each(restValues,function(value){var record=new Ext.data.Record({tag:value},value);this.myStore.add([record]);},this);return this.myStore.collect('tag').join();},setValue:function(v){if(this.store.loaded==false&&this.config.autoTag==true){this.store.on('load',this.setValueOnLoad.createDelegate(this,[v],false),this,{single:true});return;}
if(this.config.autoTag==false){while(this.insertedTagsEl.dom.firstChild!=null){this.insertedTagsEl.dom.firstChild.remove();}}
this.myStore.clearData();if(v instanceof Array){v=v.join();}
this.addItems(v);},setValueOnLoad:function(v){if(this.config.autoTag==false){while(this.insertedTagsEl.dom.firstChild!=null){this.insertedTagsEl.dom.firstChild.remove();}}
this.myStore.clearData();if(v instanceof Array){v=v.join();}
this.addItems(v);},setFieldValue:function(v){var text=v;if(this.valueField){var r=this.findRecord(this.valueField,v);if(r){text=r.data[this.displayField];}else if(Ext.isDefined(this.valueNotFoundText)){text=this.valueNotFoundText;}}
this.lastSelectionText=text;if(this.hiddenField){this.hiddenField.value=Ext.value(v,this.myStore.collect('tag').join());}
Ext.form.ComboBox.superclass.setValue.call(this,text);this.value=v;return this;},getFieldValue:function(){return this.value;},onRender:function(ct,position){if(this.hiddenName&&!Ext.isDefined(this.submitValue)){this.submitValue=false;}
Ext.form.ComboBox.superclass.onRender.call(this,ct,position);this.el.parent().wrap({tag:'div',class:'tagger-field-tags'});this.el.parent().wrap({tag:'div',class:'tagger-field-wrapper'+(this.hideInput?' tagger-wrapper-hidden':'')});this.el.parentNode=this.el.parent().parent().parent();Ext.DomHelper.insertAfter(this.el.parent().parent(),{tag:'ul'});Ext.DomHelper.insertAfter(this.el.parent(),{tag:'button',html:_('tagger.tag.assign'),class:'x-btn'});this.addButton=this.el.parentNode.child('button');this.insertedTagsEl=this.el.parentNode.child('ul');this.insertedTagsEl.wrap({tag:'div',class:'inserted-tags modx-tag-list x-superboxselect'});this.addButton.on('click',this.addItemsFromField,this);new Ext.KeyMap(this.getEl(),{key:Ext.EventObject.ENTER,fn:function(){if(this.isExpanded()==false){this.addItemsFromField();}
return true;},scope:this});if(this.hiddenName){this.hiddenField=this.el.insertSibling({tag:'input',type:'hidden',name:this.hiddenName,id:(this.hiddenId||Ext.id())},'before',true);}
if(Ext.isGecko){this.el.dom.setAttribute('autocomplete','off');}
if(!this.lazyInit){this.initList();}else{this.on('focus',this.initList,this,{single:true});}},addItemsFromField:function(){this.addItems(this.getFieldValue());},addItems:function(items){items=Ext.isEmpty(items)?'':items;var values=items.split(/\s*[,]\s*/);Ext.each(values,function(value){if(this.ignoreCase){value=value.toLowerCase();}
if(value==''){return;}
if(this.config.allowAdd==false){this.store.clearFilter();if(this.store.getCount()>0&&this.store.find('tag',value)==-1){return;}}
if(this.config.tagLimit>0){if(this.myStore.find('tag',value)==-1){if(this.myStore.getCount()>=this.config.tagLimit){return;}}}
var valueIndex=-1;if(this.config.autoTag==true){valueIndex=this.autoTagStore.find('tag',value);if(valueIndex!=-1){var rec=this.autoTagStore.getAt(valueIndex);if(rec.data.el.el&&!rec.data.el.el.hasClass('x-superboxselect-item')){rec.data.el.click();}else{if(this.myStore.find('tag',value)==-1){var record=new Ext.data.Record({tag:value},value);this.myStore.add([record]);}}}}
if(this.config.autoTag==false||valueIndex==-1){var item=new Tagger.fields.Tag({owner:this,renderTo:this.insertedTagsEl,value:value,active:true,listeners:{remove:function(item){this.fireEvent('removeitem',this,item);},scope:this}});item.render();this.fireEvent('additem',this,value);}},this);this.setFieldValue();},doQuery:function(q,forceAll){this.value=q;q=Ext.isEmpty(q)?'':q;q=q.split(',');q=q[q.length-1];q=q.replace(/^\s+|\s+$/g,'');var qe={query:q,forceAll:forceAll,combo:this,cancel:false};if(this.fireEvent('beforequery',qe)===false||qe.cancel){return false;}
q=qe.query;forceAll=qe.forceAll;if(forceAll===true||(q.length>=this.minChars)){if(this.lastQuery!==q){this.lastQuery=q;if(this.mode=='local'){this.selectedIndex=-1;if(forceAll){this.store.clearFilter();}else{this.store.filter(this.displayField,q,true);}
this.onLoad();}else{this.store.baseParams[this.queryParam]=q;this.store.load({params:this.getParams(q)});this.expand();}}else{this.selectedIndex=-1;this.onLoad();}}},onSelect:function(record,index){if(this.fireEvent('beforeselect',this,record,index)!==false){var values=this.getFieldValue().split(/\s*[,]\s*/);values.pop();values.push(record.data[this.valueField||this.displayField]);values.push('');this.setFieldValue(values.join(', '));this.fireEvent('select',this,record,index);}},getErrors:function(value){var errors=Ext.form.TextField.superclass.getErrors.apply(this,arguments);value=Ext.isDefined(value)?value:this.processValue(this.getRawValue());if(Ext.isFunction(this.validator)){var msg=this.validator(value);if(msg!==true){errors.push(msg);}}
if(this.myStore.collect('tag').join()==''){if(this.allowBlank){return errors;}else{errors.push(this.blankText);}}
if(!this.allowBlank&&(this.myStore.collect('tag').join()=='')){errors.push(this.blankText);}
if(value.length<this.minLength){errors.push(String.format(this.minLengthText,this.minLength));}
if(value.length>this.maxLength){errors.push(String.format(this.maxLengthText,this.maxLength));}
if(this.vtype){var vt=Ext.form.VTypes;if(!vt[this.vtype](value,this)){errors.push(this.vtypeText||vt[this.vtype+'Text']);}}
if(this.regex&&!this.regex.test(value)){errors.push(this.regexText);}
return errors;}});Tagger.fields.Tag=function(config){Ext.apply(this,config);Ext.ux.form.SuperBoxSelectItem.superclass.constructor.call(this);this.addEvents('remove');};Ext.extend(Tagger.fields.Tag,Ext.Component,{renderCurrentItem:true,initComponent:function(){Tagger.fields.Tag.superclass.initComponent.call(this);this.renderCurrentItem=true;var itemsCount,record;if(this.owner.config.autoTag==false){itemsCount=this.owner.myStore.getCount();record=new Ext.data.Record({tag:this.value},this.value);this.owner.myStore.add([record]);if(itemsCount==this.owner.myStore.getCount())this.renderCurrentItem=false;}else{itemsCount=this.owner.autoTagStore.getCount();record=new Ext.data.Record({tag:this.value,active:this.active,el:this},this.value);this.owner.autoTagStore.add([record]);if(itemsCount==this.owner.autoTagStore.getCount())this.renderCurrentItem=false;}},click:function(){if(this.el.hasClass('x-superboxselect-item')){this.el.removeClass('x-superboxselect-item');this.el.removeClass('modx-tag-checked');this.owner.myStore.remove(this.owner.myStore.getById(this.value));if(this.owner.hiddenField){this.owner.hiddenField.value=this.owner.myStore.collect('tag').join();}
this.fireEvent('remove',this,this.value);}else{if(this.owner.config.tagLimit>0){if(this.owner.myStore.find('tag',this.value)==-1){if(this.owner.myStore.getCount()>=this.owner.config.tagLimit){return;}}}
var record=new Ext.data.Record({tag:this.value},this.value);this.owner.myStore.add([record]);this.el.addClass('x-superboxselect-item');this.el.addClass('modx-tag-checked');}},onRender:function(ct,position){if(!this.renderCurrentItem)return true;Tagger.fields.Tag.superclass.onRender.call(this,ct,position);var el=this.el;if(el){el.remove();}
this.el=el=ct.createChild({tag:'li'},ct.last());if(this.owner.config.autoTag==true){el.on('click',this.click,this);}
if(this.active==true){this.el.dom.click();}
var btnEl=this.owner.navigateItemsWithTab?(Ext.isSafari?'button':'a'):'span';Ext.apply(el,{focus:function(){var c=this.down(btnEl+'.x-superboxselect-item-close');if(c){c.focus();}},preDestroy:function(){this.preDestroy();}.createDelegate(this)});el.update(this.value);if(this.owner.config.autoTag==false){el.addClass('x-superboxselect-item');var cfg={tag:btnEl,'class':'x-superboxselect-item-close',tabIndex:this.owner.navigateItemsWithTab?'0':'-1'};if(btnEl==='a'){cfg.href='#';}
this.lnk=el.createChild(cfg);this.lnk.on('click',function(){var record=new Ext.data.Record({tag:this.value},this.value);this.el.remove();this.owner.myStore.remove(this.owner.myStore.getById(this.value));if(this.owner.hiddenField){this.owner.hiddenField.value=this.owner.myStore.collect('tag').join();}
this.fireEvent('remove',this,this.value);},this);}else{el.addClass('tagger-autotag-item');el.addClass('modx-tag-opt');}
return true;},onDestroy:function(){Ext.destroy(this.lnk,this.el);Tagger.fields.Tag.superclass.onDestroy.call(this);}});Ext.reg('tagger-field-tags',Tagger.fields.Tags);;Ext.ux.dd.GridReorderDropTarget=function(grid,config){this.target=new Ext.dd.DropTarget(grid.getEl(),{ddGroup:grid.ddGroup||'GridDD',grid:grid,sortCol:'position',gridDropTarget:this,notifyDrop:function(dd,e,data){if(data.grid.store.sortInfo&&data.grid.store.sortInfo.field!=this.sortCol){return false;}
var search=this.grid.getStore().baseParams.query;if(search&&search!=''){return this.dropNotAllowed;}
var t=Ext.lib.Event.getTarget(e);var rindex=this.grid.getView().findRowIndex(t);if(rindex===false)return false;if(rindex==data.rowIndex)return false;var menuIndexes={};menuIndexes.oldIndex=this.grid.store.data.items[data.rowIndex].data[this.sortCol];menuIndexes.newIndex=this.grid.store.data.items[rindex].data[this.sortCol];if(this.gridDropTarget.fireEvent(this.copy?'beforerowcopy':'beforerowmove',this.gridDropTarget,menuIndexes.oldIndex,menuIndexes.newIndex,data.selections)===false)return false;var ds=this.grid.getStore();if(!this.copy){for(i=0;i<data.selections.length;i++){ds.remove(ds.getById(data.selections[i].id));}}
ds.insert(rindex,data.selections);var sm=this.grid.getSelectionModel();if(sm)sm.selectRecords(data.selections);this.gridDropTarget.fireEvent(this.copy?'afterrowcopy':'afterrowmove',this.gridDropTarget,menuIndexes.oldIndex,menuIndexes.newIndex,data.selections);return true;},notifyOver:function(dd,e,data){this.grid.getView().dragZone.ddel.innerHTML=this.grid.getDragDropText();this.grid.getView().dragZone.proxy.update(this.grid.getView().dragZone.ddel);if(data.grid.store.sortInfo&&data.grid.store.sortInfo.field!=this.sortCol){return this.dropNotAllowed;}
var search=this.grid.getStore().baseParams.query;if(search&&search!=''){return this.dropNotAllowed;}
var t=Ext.lib.Event.getTarget(e);var rindex=this.grid.getView().findRowIndex(t);if(rindex==data.rowIndex)rindex=false;return(rindex===false)?this.dropNotAllowed:this.dropAllowed;}});if(config){Ext.apply(this.target,config);if(config.listeners)Ext.apply(this,{listeners:config.listeners});}
this.addEvents({"beforerowmove":true,"afterrowmove":true,"beforerowcopy":true,"afterrowcopy":true});Ext.ux.dd.GridReorderDropTarget.superclass.constructor.call(this);};Ext.extend(Ext.ux.dd.GridReorderDropTarget,Ext.util.Observable,{getTarget:function(){return this.target;},getGrid:function(){return this.target.grid;},getCopy:function(){return this.target.copy?true:false;},setCopy:function(b){this.target.copy=b?true:false;}});;Tagger.grid.Tag=function(config){config=config||{};this.sm=new Ext.grid.CheckboxSelectionModel({listeners:{rowselect:{fn:function(sm,rowIndex,record){this.rememberRow(record);},scope:this},rowdeselect:{fn:function(sm,rowIndex,record){this.forgotRow(record);},scope:this}}});Ext.applyIf(config,{url:Tagger.config.connectorUrl,baseParams:{action:'mgr/tag/getlist'},save_action:'mgr/tag/updatefromgrid',autosave:true,fields:['id','tag','alias','group'],autoHeight:true,paging:true,remoteSort:true,sm:this.sm,columns:[this.sm,{header:_('id'),dataIndex:'id',width:70,sortable:true,hidden:false},{header:_('tagger.tag.name'),dataIndex:'tag',width:200,sortable:true,editor:{xtype:'textfield'}},{header:_('tagger.tag.alias'),dataIndex:'alias',width:200,sortable:true,editor:{xtype:'textfield'}},{header:_('tagger.tag.group'),dataIndex:'group',width:200,sortable:true,editor:{xtype:'tagger-combo-group',renderer:true,disabled:true}}],tbar:[{text:_('tagger.tag.create'),handler:this.createTag,scope:this},'',{text:_('tagger.tag.bulk_actions'),id:'tagger-grid-tag-bulk-actions',disabled:true,menu:[{text:_('tagger.tag.merge_selected'),handler:this.mergeTags,scope:this},'-',{text:_('tagger.tag.remove_selected'),handler:this.removeTags,scope:this}]},'->',{xtype:'tagger-combo-group',id:'tagger-tag-filter-group',baseParams:{action:'mgr/group/getlist',addNone:true},value:_('tagger.group.all'),listeners:{'select':{fn:this.filterByGroup,scope:this}}},{xtype:'textfield',emptyText:_('tagger.global.search')+'...',listeners:{'change':{fn:this.search,scope:this},'render':{fn:function(cmp){new Ext.KeyMap(cmp.getEl(),{key:Ext.EventObject.ENTER,fn:function(){this.fireEvent('change',this);this.blur();return true;},scope:cmp});},scope:this}}}]});Tagger.grid.Tag.superclass.constructor.call(this,config);this.getView().on('refresh',this.refreshSelection,this);};Ext.extend(Tagger.grid.Tag,MODx.grid.Grid,{windows:{},selectedRecords:[],rememberRow:function(record){if(this.selectedRecords.indexOf(record.id)==-1){this.selectedRecords.push(record.id);}
Ext.getCmp('tagger-grid-tag-bulk-actions').enable();},forgotRow:function(record){this.selectedRecords.remove(record.id);if(this.selectedRecords.length==0){Ext.getCmp('tagger-grid-tag-bulk-actions').disable();}},refreshSelection:function(){var rowsToSelect=[];Ext.each(this.selectedRecords,function(item){rowsToSelect.push(this.store.indexOfId(item));},this);this.getSelectionModel().selectRows(rowsToSelect);},getSelectedAsList:function(){return this.selectedRecords.join();},getMenu:function(){var m=[];m.push({text:_('tagger.tag.assigned_resources'),handler:this.assignedResources});m.push('-');m.push({text:_('tagger.tag.update'),handler:this.updateTag});m.push('-');m.push({text:_('tagger.tag.remove'),handler:this.removeTag});this.addContextMenuItem(m);},assignedResources:function(btn,e){var assignedResources=MODx.load({xtype:'tagger-window-assigned-resources',tagId:this.menu.record.id,title:_('tagger.tag.assigned_resources_to',{tag:this.menu.record.tag}),listeners:{'success':{fn:function(){this.refresh();},scope:this}}});assignedResources.show(e.target);},createTag:function(btn,e){var group=parseInt(Ext.getCmp('tagger-tag-filter-group').getValue());var r={};if(group>0){r.group=group;}
var createTag=MODx.load({xtype:'tagger-window-tag',title:_('tagger.tag.create'),record:r,listeners:{'success':{fn:function(){this.refresh();},scope:this}}});createTag.fp.getForm().reset();createTag.fp.getForm().setValues(r);createTag.show(e.target);},updateTag:function(btn,e){var updateTag=MODx.load({xtype:'tagger-window-tag',title:_('tagger.tag.update'),action:'mgr/tag/update',isUpdate:true,record:this.menu.record,listeners:{'success':{fn:function(){this.refresh();},scope:this}}});updateTag.fp.getForm().reset();updateTag.fp.getForm().setValues(this.menu.record);updateTag.show(e.target);},removeTag:function(btn,e){if(!this.menu.record)return false;MODx.msg.confirm({title:_('tagger.tag.remove'),text:_('tagger.tag.remove_confirm'),url:this.config.url,params:{action:'mgr/tag/remove',id:this.menu.record.id},listeners:{'success':{fn:function(r){this.refresh();},scope:this}}});return true;},removeTags:function(btn,e){var tags=this.getSelectedAsList();if(tags=='')return false;MODx.msg.confirm({title:_('tagger.tag.remove_selected'),text:_('tagger.tag.remove_selected_confirm'),url:this.config.url,params:{action:'mgr/tag/removemultiple',tags:tags},listeners:{'success':{fn:function(r){this.refresh();},scope:this}}});return true;},mergeTags:function(btn,e){var tags=this.getSelectionModel().getSelections();var record={tags:this.getSelectedAsList(),name:tags[0].data.tag,group:tags[0].data.group,tagNames:tags.map(function(tag){return tag.data.tag;}).join(', ')};if(record.tags=='')return false;var groups=tags.map(function(tag){return tag.data.group;});groups=groups.reduce(function(p,c){if(p.indexOf(c)<0)p.push(c);return p;},[]);if(groups.length>1){btn.ownerCt.hide();MODx.msg.alert(_('tagger.err.merge_same_groups'),_('tagger.err.merge_same_groups_desc'));return false;}
var mergeTags=MODx.load({xtype:'tagger-window-merge-tags',title:_('tagger.tag.merge'),action:'mgr/tag/merge',record:record,listeners:{'success':{fn:function(){this.refresh();},scope:this}}});mergeTags.fp.getForm().reset();mergeTags.fp.getForm().setValues(record);mergeTags.show(e.target);return true;},search:function(tf,nv,ov){var s=this.getStore();s.baseParams.query=tf.getValue();this.getBottomToolbar().changePage(1);this.refresh();},filterByGroup:function(combo,record){var s=this.getStore();s.baseParams.group=record.id;this.getBottomToolbar().changePage(1);this.refresh();}});Ext.reg('tagger-grid-tag',Tagger.grid.Tag);Tagger.grid.AssignedResources=function(config){config=config||{};this.sm=new Ext.grid.CheckboxSelectionModel({listeners:{rowselect:function(sm,rowIndex,record){this.rememberRow(record);},scope:this,rowdeselect:function(sm,rowIndex,record){this.forgotRow(record);},scope:this}});Ext.applyIf(config,{url:Tagger.config.connectorUrl,baseParams:{action:'mgr/tag/getassignedresources'},fields:['id','pagetitle','alias'],autoHeight:true,paging:true,remoteSort:true,pageSize:8,sm:this.sm,columns:[this.sm,{header:_('id'),dataIndex:'id',width:70,sortable:true},{header:_('pagetitle'),dataIndex:'pagetitle',width:200,sortable:true},{header:_('alias'),dataIndex:'alias',width:200,sortable:true}],tbar:[{text:_('tagger.tag.resource_unasign_selected'),id:'tagger-grid-assigned-resources-unasign-selected',handler:this.unassignSelected,scope:this,disabled:true},'->',{xtype:'textfield',emptyText:_('tagger.global.search')+'...',listeners:{'change':{fn:this.search,scope:this},'render':{fn:function(cmp){new Ext.KeyMap(cmp.getEl(),{key:Ext.EventObject.ENTER,fn:function(){this.fireEvent('change',this);this.blur();return true;},scope:cmp});},scope:this}}}]});Tagger.grid.AssignedResources.superclass.constructor.call(this,config);this.getView().on('refresh',this.refreshSelection,this);};Ext.extend(Tagger.grid.AssignedResources,MODx.grid.Grid,{windows:{},selectedRecords:[],rememberRow:function(record){if(!this.selectedRecords.in_array(record.id)){this.selectedRecords.push(record.id);}
Ext.getCmp('tagger-grid-assigned-resources-unasign-selected').enable();},forgotRow:function(record){this.selectedRecords.remove(record.id);if(this.selectedRecords.length==0){Ext.getCmp('tagger-grid-assigned-resources-unasign-selected').disable();}},refreshSelection:function(){var rowsToSelect=[];Ext.each(this.selectedRecords,function(item){rowsToSelect.push(this.store.indexOfId(item));},this);this.getSelectionModel().selectRows(rowsToSelect);},getSelectedAsList:function(){return this.selectedRecords.join();},getMenu:function(){var m=[];m.push({text:_('tagger.tag.resource_update'),handler:this.updateResource});m.push('-');m.push({text:_('tagger.tag.resource_unassign'),handler:this.unassignResource});this.addContextMenuItem(m);},search:function(tf,nv,ov){var s=this.getStore();s.baseParams.query=tf.getValue();this.getBottomToolbar().changePage(1);this.refresh();},updateResource:function(){if(!this.menu.record)return false;MODx.loadPage(MODx.action['resource/update'],'id='+this.menu.record.id)},unassignResource:function(){if(!this.menu.record)return false;MODx.msg.confirm({title:_('tagger.tag.resource_unassign'),text:_('tagger.tag.resource_unassign_confirm'),url:this.config.url,params:{action:'mgr/tag/unassign',tag:this.config.baseParams.tagId,resource:this.menu.record.id},listeners:{'success':{fn:function(r){this.refresh();},scope:this}}});},unassignSelected:function(){var resources=this.getSelectedAsList();if(!resources)return false;MODx.msg.confirm({title:_('tagger.tag.resource_unassign'),text:_('tagger.tag.resource_unassign_multiple_confirm',{resources:resources}),url:this.config.url,params:{action:'mgr/tag/unassign',tag:this.config.baseParams.tagId,resource:resources},listeners:{'success':{fn:function(r){this.refresh();},scope:this}}});}});Ext.reg('tagger-grid-assigned-resources',Tagger.grid.AssignedResources);;Tagger.window.Tag=function(config){config=config||{};Ext.applyIf(config,{title:_('tagger.tag.create'),width:475,closeAction:'close',isUpdate:false,url:Tagger.config.connectorUrl,action:'mgr/tag/create',fields:this.getFields(config)});Tagger.window.Tag.superclass.constructor.call(this,config);};Ext.extend(Tagger.window.Tag,MODx.Window,{getFields:function(config){return[{xtype:'textfield',name:'id',anchor:'100%',hidden:true},{xtype:'textfield',fieldLabel:_('tagger.tag.name'),name:'tag',anchor:'100%',allowBlank:false},{xtype:'textfield',fieldLabel:_('tagger.tag.alias'),name:'alias',anchor:'100%',allowBlank:true},{xtype:'tagger-combo-group',fieldLabel:_('tagger.tag.group'),name:'group',hiddenName:'group',anchor:'100%',allowBlank:false,readOnly:config.isUpdate,cls:(config.isUpdate==true)?'x-item-disabled':''}];}});Ext.reg('tagger-window-tag',Tagger.window.Tag);Tagger.window.AssignedResources=function(config){config=config||{};Ext.applyIf(config,{title:_('tagger.tag.assigned_resources'),width:'60%',y:40,closeAction:'close',url:Tagger.config.connectorUrl,tagId:0,items:this.getFields(config),buttons:[{text:_('cancel'),scope:this,handler:function(){this.close();}}]});Tagger.window.AssignedResources.superclass.constructor.call(this,config);};Ext.extend(Tagger.window.AssignedResources,MODx.Window,{getFields:function(config){return[{xtype:'tagger-grid-assigned-resources',baseParams:{action:'mgr/tag/getassignedresources',tagId:config.tagId},preventRender:true,cls:'main-wrapper'}];}});Ext.reg('tagger-window-assigned-resources',Tagger.window.AssignedResources);Tagger.window.MergeTags=function(config){config=config||{};Ext.applyIf(config,{title:_('tagger.tag.merge'),width:475,closeAction:'close',url:Tagger.config.connectorUrl,action:'mgr/tag/create',fields:this.getFields(config)});Tagger.window.MergeTags.superclass.constructor.call(this,config);};Ext.extend(Tagger.window.MergeTags,MODx.Window,{getFields:function(config){return[{xtype:'textfield',name:'tags',anchor:'100%',hidden:true},{html:'<p><strong>Tags:</strong> '+config.record.tagNames+'</p><p><strong>Will be merged as</strong></p>',border:false,bodyCssClass:'panel-desc tagger-window-desc',readOnly:true},{xtype:'textfield',fieldLabel:_('tagger.tag.name'),name:'name',anchor:'100%',allowBlank:false},{xtype:'tagger-combo-group',fieldLabel:_('tagger.tag.group'),name:'group',anchor:'100%',allowBlank:false,readOnly:true,disable:true,cls:'x-item-disabled'}];}});Ext.reg('tagger-window-merge-tags',Tagger.window.MergeTags);;Tagger.grid.Group=function(config){config=config||{};Ext.applyIf(config,{id:'tagger-grid-group',url:Tagger.config.connectorUrl,baseParams:{action:'mgr/group/getlist'},save_action:'mgr/group/updatefromgrid',autosave:true,fields:['id','name','alias','field_type','remove_unused','allow_new','allow_blank','allow_type','show_autotag','hide_input','tag_limit','show_for_templates','position','place','description','in_tvs_position'],autoHeight:true,paging:true,remoteSort:true,ddGroup:'TaggerDDGroup',enableDragDrop:true,columns:[{header:_('id'),dataIndex:'id',width:40,sortable:true},{header:_('tagger.group.name'),dataIndex:'name',width:150,sortable:true,editor:{xtype:'textfield'}},{header:_('tagger.group.alias'),dataIndex:'alias',width:150,sortable:true,editor:{xtype:'textfield'}},{header:_('tagger.group.field_type'),dataIndex:'field_type',width:100,sortable:true,editor:{xtype:'tagger-combo-field-type',renderer:true}},{header:_('tagger.group.remove_unused'),dataIndex:'remove_unused',width:150,sortable:true,renderer:this.rendYesNo,editor:{xtype:'modx-combo-boolean'}},{header:_('tagger.group.allow_new'),dataIndex:'allow_new',width:180,sortable:true,renderer:this.rendYesNo,editor:{xtype:'modx-combo-boolean'}},{header:_('tagger.group.allow_blank'),dataIndex:'allow_blank',width:200,sortable:true,renderer:this.rendYesNo,editor:{xtype:'modx-combo-boolean'},hidden:true},{header:_('tagger.group.allow_type'),dataIndex:'allow_type',width:200,sortable:true,renderer:this.rendYesNo,editor:{xtype:'modx-combo-boolean'},hidden:true},{header:_('tagger.group.show_autotag'),dataIndex:'show_autotag',width:200,sortable:true,renderer:this.rendYesNo,editor:{xtype:'modx-combo-boolean'},hidden:true},{header:_('tagger.group.place'),dataIndex:'place',width:200,sortable:true,editor:{xtype:'tagger-combo-group-place',renderer:true},hidden:true},{header:_('tagger.group.show_for_templates'),dataIndex:'show_for_templates',width:150},{header:_('tagger.group.position'),dataIndex:'position',width:200,hidden:true,editor:{xtype:'numberfield',allowDecimal:false,allowNegative:false}}],tbar:[{text:_('tagger.group.create'),handler:this.createGroup,scope:this},'-',{text:_('tagger.group.import'),handler:this.importToGroup,scope:this},'->',{xtype:'textfield',emptyText:_('tagger.global.search')+'...',listeners:{'change':{fn:this.search,scope:this},'render':{fn:function(cmp){new Ext.KeyMap(cmp.getEl(),{key:Ext.EventObject.ENTER,fn:function(){this.fireEvent('change',this);this.blur();return true;},scope:cmp});},scope:this}}}]});Tagger.grid.Group.superclass.constructor.call(this,config);this.on('render',this.registerGridDropTarget,this);};Ext.extend(Tagger.grid.Group,MODx.grid.Grid,{windows:{},getMenu:function(){var m=[];m.push({text:_('tagger.group.update'),handler:this.updateGroup});m.push('-');m.push({text:_('tagger.group.remove'),handler:this.removeGroup});this.addContextMenuItem(m);},importToGroup:function(btn,e){var importToGroup=MODx.load({xtype:'tagger-window-group-import',grid:this,listeners:{'success':{fn:function(){this.refresh();},scope:this}}});importToGroup.show(e.target);},createGroup:function(btn,e){var createGroup=MODx.load({xtype:'tagger-window-group',title:_('tagger.group.create'),listeners:{'success':{fn:function(){this.refresh();},scope:this}}});createGroup.show(e.target);},updateGroup:function(btn,e){var updateGroup=MODx.load({xtype:'tagger-window-group',title:_('tagger.group.update'),action:'mgr/group/update',record:this.menu.record,listeners:{'success':{fn:function(){this.refresh();},scope:this}}});updateGroup.fp.getForm().setValues(this.menu.record);updateGroup.show(e.target);},removeGroup:function(btn,e){if(!this.menu.record)return false;MODx.msg.confirm({title:_('tagger.group.remove'),text:_('tagger.group.remove_confirm'),url:this.config.url,params:{action:'mgr/group/remove',id:this.menu.record.id},listeners:{'success':{fn:function(r){this.refresh();},scope:this}}});},search:function(tf,nv,ov){var s=this.getStore();s.baseParams.query=tf.getValue();this.getBottomToolbar().changePage(1);this.refresh();},getDragDropText:function(){if(this.store.sortInfo&&this.store.sortInfo.field!='position'){return _('tagger.err.bad_sort_column',{column:'position'});}
var search=this.getStore().baseParams.query;if(search&&search!=''){return _('tagger.err.clear_filter');}
return _('tagger.global.change_order',{name:this.selModel.selections.items[0].data.name});},registerGridDropTarget:function(){var ddrow=new Ext.ux.dd.GridReorderDropTarget(this,{copy:false,sortCol:'position',listeners:{'beforerowmove':function(objThis,oldIndex,newIndex,records){},'afterrowmove':function(objThis,oldIndex,newIndex,records){MODx.Ajax.request({url:Tagger.config.connectorUrl,params:{action:'mgr/group/ddreorder',idGroup:records.pop().id,oldIndex:oldIndex,newIndex:newIndex},listeners:{'success':{fn:function(r){this.target.grid.refresh();},scope:this}}});},'beforerowcopy':function(objThis,oldIndex,newIndex,records){},'afterrowcopy':function(objThis,oldIndex,newIndex,records){}}});Ext.dd.ScrollManager.register(this.getView().getEditorParent());},destroyScrollManager:function(){Ext.dd.ScrollManager.unregister(this.getView().getEditorParent());}});Ext.reg('tagger-grid-group',Tagger.grid.Group);;Tagger.window.Group=function(config){config=config||{};Ext.applyIf(config,{title:_('tagger.group.create'),height:550,width:600,closeAction:'close',fileUpload:true,url:Tagger.config.connectorUrl,action:'mgr/group/create',fields:this.getFields(config)});Tagger.window.Group.superclass.constructor.call(this,config);};Ext.extend(Tagger.window.Group,MODx.Window,{getFields:function(config){var fields=[{xtype:'textfield',name:'id',anchor:'100%',hidden:true},{layout:'column',border:false,anchor:'100%',defaults:{layout:'form',labelAlign:'top',labelSeparator:'',anchor:'100%',border:false},items:[{columnWidth:.5,border:false,defaults:{msgTarget:'under',anchor:'100%'},items:this.getLeftColumnFields(config)},{columnWidth:.5,border:false,defaults:{msgTarget:'under',anchor:'100%'},items:this.getRightColumnFields(config)}]}];return fields;},getLeftColumnFields:function(config){debugger;return[{xtype:'textfield',fieldLabel:_('tagger.group.name'),description:_('tagger.group.name_desc'),name:'name',allowBlank:false},{xtype:'textarea',fieldLabel:_('tagger.group.description'),description:_('tagger.group.description_desc'),name:'description'},{xtype:'textfield',fieldLabel:_('tagger.group.alias'),description:_('tagger.group.alias_desc'),name:'alias',allowBlank:true},{xtype:'tagger-combo-group-place',fieldLabel:_('tagger.group.place'),description:_('tagger.group.place_desc'),name:'place',hiddenName:'place',allowBlank:false,listeners:{select:{fn:function(t,rec){var els=this.find('name','in_tvs_position');if(els.length==1){if(rec.data.v=='in-tvs'){els[0].show();}else{els[0].hide();}}},scope:this}}},{xtype:'numberfield',fieldLabel:_('tagger.group.in_tvs_position'),description:_('tagger.group.in_tvs_position_desc'),name:'in_tvs_position',allowDecimals:false,allowNegative:false,hidden:config.record==undefined||config.record.place!='in-tvs',value:(config.record&&config.record.in_tvs_position)?config.record.in_tvs_position:9999},{xtype:'textfield',fieldLabel:_('tagger.group.show_for_templates'),description:_('tagger.group.show_for_templates_desc'),name:'show_for_templates',hiddenName:'show_for_templates'}];},getRightColumnFields:function(config){return[{xtype:'tagger-combo-field-type',fieldLabel:_('tagger.group.field_type'),description:_('tagger.group.field_type_desc'),name:'field_type',hiddenName:'field_type',allowBlank:false,listeners:{select:{fn:function(t,rec){var els=this.find('name','show_autotag');if(els.length==1){if(rec.data.v=='tagger-field-tags'){els[0].show();}else{els[0].hide();}}
var ehi=this.find('name','hide_input');if(ehi.length==1){if(rec.data.v=='tagger-field-tags'){if(els.length==1&&els[0].getValue()==1){ehi[0].show();}}else{ehi[0].hide();}}},scope:this}}},{xtype:'xcheckbox',fieldLabel:_('tagger.group.remove_unused'),description:_('tagger.group.remove_unused_desc'),name:'remove_unused'},{xtype:'xcheckbox',fieldLabel:_('tagger.group.allow_new'),description:_('tagger.group.allow_new_desc'),name:'allow_new'},{layout:'column',border:false,anchor:'100%',defaults:{layout:'form',labelAlign:'top',labelSeparator:'',anchor:'100%',border:false},items:[{columnWidth:.5,border:false,defaults:{msgTarget:'under',anchor:'100%'},items:[{xtype:'xcheckbox',fieldLabel:_('tagger.group.allow_blank'),description:_('tagger.group.allow_blank_desc'),name:'allow_blank'}]},{columnWidth:.5,border:false,defaults:{msgTarget:'under',anchor:'100%'},items:[{xtype:'xcheckbox',fieldLabel:_('tagger.group.allow_type'),description:_('tagger.group.allow_type_desc'),name:'allow_type'}]}]},{layout:'column',border:false,anchor:'100%',defaults:{layout:'form',labelAlign:'top',labelSeparator:'',anchor:'100%',border:false},items:[{columnWidth:.5,border:false,defaults:{msgTarget:'under',anchor:'100%'},items:[{xtype:'xcheckbox',fieldLabel:_('tagger.group.show_autotag'),description:_('tagger.group.show_autotag_desc'),name:'show_autotag',hidden:config.record&&config.record.field_type!='tagger-field-tags',listeners:{check:function(t,checked){var els=this.find('name','hide_input');if(els.length==1){if(checked){els[0].show();}else{els[0].hide();}}},scope:this}}]},{columnWidth:.5,border:false,defaults:{msgTarget:'under',anchor:'100%'},items:[{xtype:'xcheckbox',fieldLabel:_('tagger.group.hide_input'),description:_('tagger.group.hide_input_desc'),name:'hide_input',hidden:config.record==undefined||config.record.show_autotag!=1}]}]},{xtype:'numberfield',fieldLabel:_('tagger.group.tag_limit'),description:_('tagger.group.tag_limit_desc'),name:'tag_limit',allowNegative:false,allowDecimals:false,hiddenName:'tag_limit',value:(config.record&&config.record.tag_limit)?config.record.tag_limit:0}];}});Ext.reg('tagger-window-group',Tagger.window.Group);Tagger.window.GroupImport=function(config){Ext.applyIf(config,{title:_('tagger.group.import'),width:475,closeAction:'close',fileUpload:true,url:Tagger.config.connectorUrl,grid:null,action:'mgr/group/import',fields:this.getFields(config)});Tagger.window.GroupImport.superclass.constructor.call(this,config);};Ext.extend(Tagger.window.GroupImport,MODx.Window,{getFields:function(config){var fields=[{xtype:'tagger-combo-tv',fieldLabel:_('tagger.group.import_from'),name:'tv',hiddenName:'tv',anchor:'100%',allowBlank:false},{xtype:'tagger-combo-group',fieldLabel:_('tagger.group.import_to'),baseParams:{action:'mgr/group/getlist',fieldType:'tagger-field-tags'},name:'group',hiddenName:'group',anchor:'100%',allowBlank:false}];return fields;}});Ext.reg('tagger-window-group-import',Tagger.window.GroupImport);;Tagger.panel.Home=function(config){config=config||{};Ext.apply(config,{border:false,baseCls:'modx-formpanel',cls:'container',items:[{html:'<h2>'+_('tagger')+'</h2>',border:false,cls:'modx-page-header'},{xtype:'modx-tabs',defaults:{border:false,autoHeight:true,layout:'anchor'},border:true,activeItem:0,hideMode:'offsets',items:[{title:_('tagger.tag.tags'),items:[{html:'<p>'+_('tagger.tag.intro_msg')+'</p>',border:false,bodyCssClass:'panel-desc'},{xtype:'tagger-grid-tag',preventRender:true,cls:'main-wrapper',anchor:'100%'}]},{title:_('tagger.group.groups'),items:[{html:'<p>'+_('tagger.group.intro_msg')+'</p>',border:false,bodyCssClass:'panel-desc'},{xtype:'tagger-grid-group',preventRender:true,cls:'main-wrapper',anchor:'100%'}]}]}]});Tagger.panel.Home.superclass.constructor.call(this,config);};Ext.extend(Tagger.panel.Home,MODx.Panel);Ext.reg('tagger-panel-home',Tagger.panel.Home);